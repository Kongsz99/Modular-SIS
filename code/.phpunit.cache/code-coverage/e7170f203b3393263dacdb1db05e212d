a:6:{s:9:"classesIn";a:1:{s:48:"PHPUnit\Framework\MockObject\Generator\Generator";a:6:{s:4:"name";s:9:"Generator";s:14:"namespacedName";s:48:"PHPUnit\Framework\MockObject\Generator\Generator";s:9:"namespace";s:38:"PHPUnit\Framework\MockObject\Generator";s:9:"startLine";i:72;s:7:"endLine";i:1099;s:7:"methods";a:23:{s:10:"testDouble";a:6:{s:10:"methodName";s:10:"testDouble";s:9:"signature";s:408:"testDouble(string $type, bool $mockObject, bool $markAsMockObject, ?array $methods, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods, object $proxyTarget, bool $allowMockingUnknownTypes, bool $returnValueGeneration): \PHPUnit\Framework\MockObject\MockObject|\PHPUnit\Framework\MockObject\Stub";s:10:"visibility";s:6:"public";s:9:"startLine";i:111;s:7:"endLine";i:159;s:3:"ccn";i:6;}s:34:"testDoubleForInterfaceIntersection";a:6:{s:10:"methodName";s:34:"testDoubleForInterfaceIntersection";s:9:"signature";s:168:"testDoubleForInterfaceIntersection(array $interfaces, bool $mockObject, bool $callAutoload): \PHPUnit\Framework\MockObject\MockObject|\PHPUnit\Framework\MockObject\Stub";s:10:"visibility";s:6:"public";s:9:"startLine";i:167;s:7:"endLine";i:220;s:3:"ccn";i:7;}s:26:"mockObjectForAbstractClass";a:6:{s:10:"methodName";s:26:"mockObjectForAbstractClass";s:9:"signature";s:255:"mockObjectForAbstractClass(string $originalClassName, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, array $mockedMethods, bool $cloneArguments): PHPUnit\Framework\MockObject\MockObject";s:10:"visibility";s:6:"public";s:9:"startLine";i:243;s:7:"endLine";i:280;s:3:"ccn";i:7;}s:18:"mockObjectForTrait";a:6:{s:10:"methodName";s:18:"mockObjectForTrait";s:9:"signature";s:239:"mockObjectForTrait(string $traitName, array $arguments, string $mockClassName, bool $callOriginalConstructor, bool $callOriginalClone, bool $callAutoload, array $mockedMethods, bool $cloneArguments): PHPUnit\Framework\MockObject\MockObject";s:10:"visibility";s:6:"public";s:9:"startLine";i:305;s:7:"endLine";i:331;s:3:"ccn";i:2;}s:14:"objectForTrait";a:6:{s:10:"methodName";s:14:"objectForTrait";s:9:"signature";s:134:"objectForTrait(string $traitName, string $traitClassName, bool $callAutoload, bool $callOriginalConstructor, array $arguments): object";s:10:"visibility";s:6:"public";s:9:"startLine";i:344;s:7:"endLine";i:375;s:3:"ccn";i:2;}s:8:"generate";a:6:{s:10:"methodName";s:8:"generate";s:9:"signature";s:247:"generate(string $type, bool $mockObject, bool $markAsMockObject, array $methods, string $mockClassName, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods): PHPUnit\Framework\MockObject\Generator\MockClass";s:10:"visibility";s:6:"public";s:9:"startLine";i:388;s:7:"endLine";i:429;s:3:"ccn";i:5;}s:21:"generateClassFromWsdl";a:6:{s:10:"methodName";s:21:"generateClassFromWsdl";s:9:"signature";s:98:"generateClassFromWsdl(string $wsdlFile, string $className, array $methods, array $options): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:437;s:7:"endLine";i:526;s:3:"ccn";i:10;}s:16:"mockClassMethods";a:6:{s:10:"methodName";s:16:"mockClassMethods";s:9:"signature";s:91:"mockClassMethods(string $className, bool $callOriginalMethods, bool $cloneArguments): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:533;s:7:"endLine";i:545;s:3:"ccn";i:5;}s:27:"userDefinedInterfaceMethods";a:6:{s:10:"methodName";s:27:"userDefinedInterfaceMethods";s:9:"signature";s:57:"userDefinedInterfaceMethods(string $interfaceName): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:554;s:7:"endLine";i:568;s:3:"ccn";i:3;}s:9:"getObject";a:6:{s:10:"methodName";s:9:"getObject";s:9:"signature";s:217:"getObject(PHPUnit\Framework\MockObject\Generator\MockType $mockClass, string $type, bool $callOriginalConstructor, array $arguments, bool $callOriginalMethods, object $proxyTarget, bool $returnValueGeneration): object";s:10:"visibility";s:7:"private";s:9:"startLine";i:574;s:7:"endLine";i:588;s:3:"ccn";i:3;}s:30:"generateCodeForTestDoubleClass";a:6:{s:10:"methodName";s:30:"generateCodeForTestDoubleClass";s:9:"signature";s:278:"generateCodeForTestDoubleClass(string $type, bool $mockObject, bool $markAsMockObject, ?array $explicitMethods, string $mockClassName, bool $callOriginalClone, bool $callAutoload, bool $cloneArguments, bool $callOriginalMethods): PHPUnit\Framework\MockObject\Generator\MockClass";s:10:"visibility";s:7:"private";s:9:"startLine";i:597;s:7:"endLine";i:822;s:3:"ccn";i:47;}s:17:"generateClassName";a:6:{s:10:"methodName";s:17:"generateClassName";s:9:"signature";s:73:"generateClassName(string $type, string $className, string $prefix): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:824;s:7:"endLine";i:854;s:3:"ccn";i:4;}s:34:"generateTestDoubleClassDeclaration";a:6:{s:10:"methodName";s:34:"generateTestDoubleClassDeclaration";s:9:"signature";s:130:"generateTestDoubleClassDeclaration(bool $mockObject, array $mockClassName, bool $isInterface, array $additionalInterfaces): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:856;s:7:"endLine";i:894;s:3:"ccn";i:6;}s:18:"canMethodBeDoubled";a:6:{s:10:"methodName";s:18:"canMethodBeDoubled";s:9:"signature";s:50:"canMethodBeDoubled(ReflectionMethod $method): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:896;s:7:"endLine";i:915;s:3:"ccn";i:5;}s:20:"isMethodNameExcluded";a:6:{s:10:"methodName";s:20:"isMethodNameExcluded";s:9:"signature";s:40:"isMethodNameExcluded(string $name): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:917;s:7:"endLine";i:920;s:3:"ccn";i:1;}s:15:"ensureKnownType";a:6:{s:10:"methodName";s:15:"ensureKnownType";s:9:"signature";s:55:"ensureKnownType(string $type, bool $callAutoload): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:925;s:7:"endLine";i:930;s:3:"ccn";i:3;}s:18:"ensureValidMethods";a:6:{s:10:"methodName";s:18:"ensureValidMethods";s:9:"signature";s:41:"ensureValidMethods(?array $methods): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:936;s:7:"endLine";i:951;s:3:"ccn";i:5;}s:36:"ensureMockedClassDoesNotAlreadyExist";a:6:{s:10:"methodName";s:36:"ensureMockedClassDoesNotAlreadyExist";s:9:"signature";s:65:"ensureMockedClassDoesNotAlreadyExist(string $mockClassName): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:957;s:7:"endLine";i:966;s:3:"ccn";i:4;}s:11:"instantiate";a:6:{s:10:"methodName";s:11:"instantiate";s:9:"signature";s:87:"instantiate(string $className, bool $callOriginalConstructor, array $arguments): object";s:10:"visibility";s:7:"private";s:9:"startLine";i:973;s:7:"endLine";i:1004;s:3:"ccn";i:5;}s:22:"instantiateProxyTarget";a:6:{s:10:"methodName";s:22:"instantiateProxyTarget";s:9:"signature";s:98:"instantiateProxyTarget(?object $proxyTarget, object $object, string $type, array $arguments): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:1011;s:7:"endLine";i:1036;s:3:"ccn";i:4;}s:12:"reflectClass";a:6:{s:10:"methodName";s:12:"reflectClass";s:9:"signature";s:48:"reflectClass(string $className): ReflectionClass";s:10:"visibility";s:7:"private";s:9:"startLine";i:1043;s:7:"endLine";i:1058;s:3:"ccn";i:2;}s:16:"namesOfMethodsIn";a:6:{s:10:"methodName";s:16:"namesOfMethodsIn";s:9:"signature";s:53:"namesOfMethodsIn(string $classOrInterfaceName): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:1067;s:7:"endLine";i:1079;s:3:"ccn";i:4;}s:16:"interfaceMethods";a:6:{s:10:"methodName";s:16:"interfaceMethods";s:9:"signature";s:68:"interfaceMethods(string $interfaceName, bool $cloneArguments): array";s:10:"visibility";s:7:"private";s:9:"startLine";i:1088;s:7:"endLine";i:1098;s:3:"ccn";i:2;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:1100;s:18:"commentLinesOfCode";i:183;s:21:"nonCommentLinesOfCode";i:917;}s:15:"ignoredLinesFor";a:36:{i:0;i:72;i:1;i:982;i:2;i:983;i:3;i:984;i:4;i:985;i:5;i:986;i:6;i:987;i:7;i:988;i:8;i:989;i:9;i:990;i:10;i:995;i:11;i:996;i:12;i:997;i:13;i:998;i:14;i:999;i:15;i:1000;i:16;i:1001;i:17;i:1002;i:18;i:1023;i:19;i:1024;i:20;i:1025;i:21;i:1026;i:22;i:1027;i:23;i:1028;i:24;i:1029;i:25;i:1030;i:26;i:1031;i:27;i:1047;i:28;i:1048;i:29;i:1049;i:30;i:1050;i:31;i:1051;i:32;i:1052;i:33;i:1053;i:34;i:1054;i:35;i:1055;}s:17:"executableLinesIn";a:504:{i:113;i:5;i:114;i:6;i:117;i:7;i:118;i:8;i:121;i:9;i:122;i:10;i:124;i:11;i:125;i:12;i:128;i:13;i:129;i:13;i:130;i:13;i:131;i:13;i:132;i:13;i:133;i:13;i:134;i:13;i:135;i:13;i:136;i:13;i:137;i:13;i:138;i:13;i:140;i:14;i:141;i:14;i:142;i:14;i:143;i:14;i:144;i:14;i:145;i:14;i:146;i:14;i:147;i:14;i:148;i:14;i:150;i:15;i:152;i:16;i:153;i:17;i:155;i:18;i:158;i:19;i:169;i:20;i:170;i:21;i:173;i:22;i:174;i:23;i:175;i:24;i:179;i:25;i:181;i:26;i:183;i:27;i:184;i:28;i:187;i:29;i:188;i:30;i:191;i:31;i:193;i:32;i:194;i:33;i:195;i:34;i:198;i:35;i:206;i:36;i:201;i:37;i:202;i:37;i:203;i:37;i:204;i:37;i:205;i:37;i:208;i:38;i:210;i:39;i:211;i:39;i:212;i:39;i:213;i:39;i:214;i:39;i:215;i:39;i:217;i:40;i:219;i:41;i:245;i:43;i:246;i:44;i:247;i:45;i:248;i:46;i:250;i:47;i:251;i:48;i:252;i:49;i:256;i:50;i:257;i:51;i:260;i:52;i:261;i:52;i:262;i:52;i:263;i:52;i:264;i:52;i:265;i:52;i:266;i:52;i:267;i:52;i:268;i:52;i:269;i:52;i:270;i:52;i:271;i:52;i:273;i:53;i:274;i:54;i:276;i:55;i:279;i:56;i:307;i:58;i:308;i:59;i:311;i:60;i:312;i:60;i:313;i:60;i:314;i:60;i:315;i:60;i:317;i:61;i:319;i:62;i:320;i:62;i:321;i:62;i:322;i:62;i:323;i:62;i:324;i:62;i:325;i:62;i:327;i:63;i:328;i:64;i:330;i:65;i:346;i:67;i:347;i:68;i:350;i:69;i:351;i:69;i:352;i:69;i:353;i:69;i:354;i:69;i:356;i:70;i:358;i:71;i:359;i:71;i:360;i:71;i:361;i:71;i:362;i:71;i:363;i:71;i:364;i:71;i:366;i:72;i:367;i:72;i:368;i:72;i:369;i:72;i:370;i:72;i:371;i:72;i:372;i:72;i:373;i:72;i:374;i:72;i:390;i:73;i:391;i:74;i:392;i:74;i:393;i:74;i:394;i:74;i:395;i:74;i:396;i:74;i:397;i:74;i:398;i:74;i:399;i:74;i:400;i:74;i:401;i:74;i:404;i:75;i:405;i:75;i:406;i:75;i:407;i:75;i:408;i:75;i:409;i:75;i:410;i:75;i:411;i:75;i:412;i:75;i:414;i:76;i:415;i:77;i:416;i:77;i:417;i:77;i:418;i:77;i:419;i:77;i:420;i:77;i:421;i:77;i:422;i:77;i:423;i:77;i:424;i:77;i:425;i:77;i:428;i:78;i:439;i:80;i:440;i:81;i:443;i:82;i:446;i:83;i:447;i:84;i:449;i:85;i:450;i:86;i:455;i:88;i:451;i:88;i:452;i:88;i:453;i:88;i:454;i:88;i:458;i:89;i:460;i:90;i:461;i:91;i:463;i:92;i:464;i:93;i:466;i:94;i:467;i:95;i:468;i:96;i:469;i:97;i:471;i:98;i:472;i:99;i:473;i:99;i:474;i:99;i:475;i:99;i:477;i:100;i:478;i:101;i:480;i:102;i:481;i:103;i:484;i:104;i:487;i:105;i:488;i:105;i:489;i:105;i:490;i:105;i:491;i:105;i:492;i:105;i:494;i:106;i:498;i:107;i:500;i:108;i:501;i:109;i:504;i:110;i:506;i:111;i:507;i:112;i:509;i:113;i:510;i:114;i:511;i:115;i:512;i:116;i:515;i:117;i:516;i:117;i:517;i:117;i:518;i:117;i:519;i:117;i:520;i:117;i:521;i:117;i:522;i:117;i:523;i:117;i:525;i:118;i:535;i:119;i:536;i:120;i:538;i:121;i:539;i:122;i:540;i:123;i:544;i:124;i:556;i:125;i:557;i:126;i:559;i:127;i:560;i:128;i:561;i:129;i:564;i:130;i:567;i:131;i:576;i:133;i:577;i:134;i:579;i:135;i:580;i:136;i:583;i:137;i:584;i:138;i:587;i:139;i:599;i:140;i:600;i:141;i:601;i:142;i:602;i:143;i:603;i:144;i:604;i:145;i:605;i:146;i:606;i:147;i:607;i:148;i:609;i:149;i:610;i:149;i:611;i:149;i:612;i:149;i:613;i:149;i:615;i:150;i:616;i:151;i:617;i:152;i:618;i:153;i:621;i:154;i:622;i:155;i:624;i:156;i:625;i:157;i:626;i:157;i:627;i:157;i:629;i:158;i:632;i:159;i:634;i:160;i:636;i:161;i:637;i:162;i:640;i:163;i:641;i:164;i:644;i:165;i:645;i:166;i:649;i:167;i:650;i:168;i:651;i:169;i:652;i:170;i:653;i:171;i:655;i:172;i:656;i:173;i:658;i:174;i:659;i:175;i:661;i:176;i:662;i:177;i:666;i:178;i:667;i:178;i:668;i:178;i:671;i:179;i:672;i:179;i:673;i:179;i:674;i:179;i:675;i:179;i:679;i:180;i:680;i:181;i:681;i:182;i:682;i:183;i:684;i:184;i:685;i:184;i:686;i:184;i:689;i:185;i:690;i:186;i:692;i:187;i:693;i:188;i:694;i:189;i:696;i:190;i:700;i:191;i:704;i:192;i:705;i:193;i:706;i:193;i:707;i:193;i:710;i:194;i:711;i:195;i:712;i:195;i:713;i:195;i:716;i:196;i:717;i:197;i:718;i:198;i:719;i:199;i:721;i:200;i:722;i:201;i:723;i:201;i:724;i:201;i:727;i:202;i:728;i:202;i:729;i:202;i:730;i:202;i:731;i:202;i:732;i:202;i:733;i:202;i:738;i:203;i:739;i:204;i:741;i:205;i:742;i:206;i:744;i:207;i:745;i:207;i:746;i:207;i:747;i:207;i:748;i:207;i:749;i:207;i:753;i:208;i:755;i:209;i:756;i:210;i:759;i:211;i:760;i:212;i:762;i:213;i:765;i:214;i:766;i:215;i:769;i:216;i:770;i:216;i:771;i:216;i:772;i:216;i:773;i:217;i:774;i:218;i:778;i:219;i:779;i:220;i:782;i:221;i:783;i:222;i:786;i:223;i:787;i:224;i:790;i:225;i:792;i:226;i:793;i:227;i:794;i:227;i:795;i:227;i:796;i:227;i:799;i:228;i:801;i:229;i:802;i:229;i:803;i:229;i:804;i:229;i:805;i:229;i:806;i:229;i:807;i:229;i:808;i:229;i:809;i:229;i:810;i:229;i:811;i:229;i:812;i:229;i:813;i:229;i:814;i:229;i:815;i:229;i:817;i:230;i:818;i:230;i:819;i:230;i:820;i:230;i:821;i:230;i:826;i:231;i:827;i:232;i:830;i:233;i:832;i:234;i:833;i:235;i:834;i:236;i:835;i:237;i:837;i:238;i:838;i:239;i:841;i:240;i:845;i:241;i:843;i:242;i:844;i:242;i:848;i:243;i:849;i:243;i:850;i:243;i:851;i:243;i:852;i:243;i:853;i:243;i:858;i:245;i:859;i:246;i:861;i:247;i:864;i:248;i:865;i:249;i:867;i:250;i:868;i:251;i:869;i:251;i:870;i:251;i:871;i:251;i:872;i:251;i:874;i:252;i:875;i:253;i:877;i:254;i:878;i:255;i:881;i:256;i:884;i:257;i:885;i:257;i:886;i:257;i:887;i:257;i:888;i:257;i:889;i:257;i:890;i:257;i:893;i:258;i:898;i:259;i:899;i:260;i:902;i:261;i:903;i:262;i:906;i:263;i:907;i:264;i:910;i:265;i:911;i:266;i:914;i:267;i:919;i:268;i:927;i:269;i:928;i:270;i:938;i:271;i:939;i:272;i:942;i:273;i:943;i:274;i:944;i:275;i:948;i:276;i:949;i:277;i:959;i:278;i:960;i:279;i:962;i:280;i:963;i:281;i:975;i:282;i:976;i:283;i:977;i:284;i:981;i:285;i:983;i:286;i:988;i:288;i:984;i:288;i:985;i:288;i:986;i:288;i:987;i:288;i:994;i:289;i:996;i:290;i:1001;i:292;i:997;i:292;i:998;i:292;i:999;i:292;i:1000;i:292;i:1013;i:293;i:1014;i:294;i:1016;i:295;i:1017;i:296;i:1019;i:297;i:1022;i:298;i:1024;i:299;i:1029;i:301;i:1025;i:301;i:1026;i:301;i:1027;i:301;i:1028;i:301;i:1035;i:302;i:1046;i:303;i:1048;i:304;i:1053;i:306;i:1049;i:306;i:1050;i:306;i:1051;i:306;i:1052;i:306;i:1057;i:307;i:1069;i:308;i:1070;i:309;i:1072;i:310;i:1073;i:311;i:1074;i:312;i:1078;i:313;i:1090;i:314;i:1091;i:315;i:1093;i:316;i:1094;i:317;i:1097;i:318;}}