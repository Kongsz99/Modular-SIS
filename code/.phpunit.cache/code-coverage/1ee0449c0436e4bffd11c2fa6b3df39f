a:6:{s:9:"classesIn";a:1:{s:32:"SebastianBergmann\Type\UnionType";a:6:{s:4:"name";s:9:"UnionType";s:14:"namespacedName";s:32:"SebastianBergmann\Type\UnionType";s:9:"namespace";s:22:"SebastianBergmann\Type";s:9:"startLine";i:20;s:7:"endLine";i:147;s:7:"methods";a:10:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:47:"__construct(SebastianBergmann\Type\Type $types)";s:10:"visibility";s:6:"public";s:9:"startLine";i:30;s:7:"endLine";i:38;s:3:"ccn";i:1;}s:12:"isAssignable";a:6:{s:10:"methodName";s:12:"isAssignable";s:9:"signature";s:54:"isAssignable(SebastianBergmann\Type\Type $other): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:40;s:7:"endLine";i:49;s:3:"ccn";i:3;}s:8:"asString";a:6:{s:10:"methodName";s:8:"asString";s:9:"signature";s:18:"asString(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:54;s:7:"endLine";i:57;s:3:"ccn";i:1;}s:4:"name";a:6:{s:10:"methodName";s:4:"name";s:9:"signature";s:14:"name(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:62;s:7:"endLine";i:79;s:3:"ccn";i:3;}s:10:"allowsNull";a:6:{s:10:"methodName";s:10:"allowsNull";s:9:"signature";s:18:"allowsNull(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:81;s:7:"endLine";i:90;s:3:"ccn";i:3;}s:7:"isUnion";a:6:{s:10:"methodName";s:7:"isUnion";s:9:"signature";s:15:"isUnion(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:92;s:7:"endLine";i:95;s:3:"ccn";i:1;}s:25:"containsIntersectionTypes";a:6:{s:10:"methodName";s:25:"containsIntersectionTypes";s:9:"signature";s:33:"containsIntersectionTypes(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:97;s:7:"endLine";i:106;s:3:"ccn";i:3;}s:5:"types";a:6:{s:10:"methodName";s:5:"types";s:9:"signature";s:14:"types(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:111;s:7:"endLine";i:114;s:3:"ccn";i:1;}s:23:"ensureMinimumOfTwoTypes";a:6:{s:10:"methodName";s:23:"ensureMinimumOfTwoTypes";s:9:"signature";s:65:"ensureMinimumOfTwoTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:119;s:7:"endLine";i:126;s:3:"ccn";i:2;}s:20:"ensureOnlyValidTypes";a:6:{s:10:"methodName";s:20:"ensureOnlyValidTypes";s:9:"signature";s:62:"ensureOnlyValidTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:131;s:7:"endLine";i:146;s:3:"ccn";i:4;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:148;s:18:"commentLinesOfCode";i:32;s:21:"nonCommentLinesOfCode";i:116;}s:15:"ignoredLinesFor";a:1:{i:0;i:20;}s:17:"executableLinesIn";a:40:{i:32;i:2;i:33;i:3;i:35;i:4;i:37;i:5;i:42;i:6;i:43;i:7;i:44;i:8;i:48;i:9;i:56;i:10;i:64;i:11;i:66;i:12;i:67;i:13;i:68;i:14;i:70;i:15;i:73;i:16;i:76;i:17;i:78;i:18;i:83;i:19;i:84;i:20;i:85;i:21;i:89;i:22;i:94;i:23;i:99;i:24;i:100;i:25;i:101;i:26;i:105;i:27;i:113;i:28;i:121;i:29;i:124;i:31;i:122;i:31;i:123;i:31;i:133;i:32;i:134;i:33;i:137;i:35;i:135;i:35;i:136;i:35;i:140;i:36;i:143;i:38;i:141;i:38;i:142;i:38;}}