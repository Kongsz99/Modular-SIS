a:6:{s:9:"classesIn";a:1:{s:39:"SebastianBergmann\Type\IntersectionType";a:6:{s:4:"name";s:16:"IntersectionType";s:14:"namespacedName";s:39:"SebastianBergmann\Type\IntersectionType";s:9:"namespace";s:22:"SebastianBergmann\Type";s:9:"startLine";i:21;s:7:"endLine";i:134;s:7:"methods";a:10:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:47:"__construct(SebastianBergmann\Type\Type $types)";s:10:"visibility";s:6:"public";s:9:"startLine";i:31;s:7:"endLine";i:40;s:3:"ccn";i:1;}s:12:"isAssignable";a:6:{s:10:"methodName";s:12:"isAssignable";s:9:"signature";s:54:"isAssignable(SebastianBergmann\Type\Type $other): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:42;s:7:"endLine";i:45;s:3:"ccn";i:1;}s:8:"asString";a:6:{s:10:"methodName";s:8:"asString";s:9:"signature";s:18:"asString(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:50;s:7:"endLine";i:53;s:3:"ccn";i:1;}s:4:"name";a:6:{s:10:"methodName";s:4:"name";s:9:"signature";s:14:"name(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:58;s:7:"endLine";i:69;s:3:"ccn";i:2;}s:10:"allowsNull";a:6:{s:10:"methodName";s:10:"allowsNull";s:9:"signature";s:18:"allowsNull(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:71;s:7:"endLine";i:74;s:3:"ccn";i:1;}s:14:"isIntersection";a:6:{s:10:"methodName";s:14:"isIntersection";s:9:"signature";s:22:"isIntersection(): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:76;s:7:"endLine";i:79;s:3:"ccn";i:1;}s:5:"types";a:6:{s:10:"methodName";s:5:"types";s:9:"signature";s:14:"types(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:84;s:7:"endLine";i:87;s:3:"ccn";i:1;}s:23:"ensureMinimumOfTwoTypes";a:6:{s:10:"methodName";s:23:"ensureMinimumOfTwoTypes";s:9:"signature";s:65:"ensureMinimumOfTwoTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:92;s:7:"endLine";i:99;s:3:"ccn";i:2;}s:20:"ensureOnlyValidTypes";a:6:{s:10:"methodName";s:20:"ensureOnlyValidTypes";s:9:"signature";s:62:"ensureOnlyValidTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:104;s:7:"endLine";i:113;s:3:"ccn";i:3;}s:22:"ensureNoDuplicateTypes";a:6:{s:10:"methodName";s:22:"ensureNoDuplicateTypes";s:9:"signature";s:64:"ensureNoDuplicateTypes(SebastianBergmann\Type\Type $types): void";s:10:"visibility";s:7:"private";s:9:"startLine";i:118;s:7:"endLine";i:133;s:3:"ccn";i:3;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:135;s:18:"commentLinesOfCode";i:35;s:21:"nonCommentLinesOfCode";i:100;}s:15:"ignoredLinesFor";a:1:{i:0;i:21;}s:17:"executableLinesIn";a:31:{i:33;i:2;i:34;i:3;i:35;i:4;i:37;i:5;i:39;i:6;i:44;i:7;i:52;i:8;i:60;i:9;i:62;i:10;i:63;i:11;i:66;i:12;i:68;i:13;i:73;i:14;i:78;i:15;i:86;i:16;i:94;i:17;i:97;i:19;i:95;i:19;i:96;i:19;i:106;i:20;i:107;i:21;i:110;i:23;i:108;i:23;i:109;i:23;i:120;i:24;i:122;i:25;i:123;i:26;i:125;i:27;i:127;i:28;i:128;i:29;i:131;i:30;}}