a:6:{s:9:"classesIn";a:1:{s:54:"PHPStan\Rules\Methods\IllegalConstructorMethodCallRule";a:6:{s:4:"name";s:32:"IllegalConstructorMethodCallRule";s:14:"namespacedName";s:54:"PHPStan\Rules\Methods\IllegalConstructorMethodCallRule";s:9:"namespace";s:21:"PHPStan\Rules\Methods";s:9:"startLine";i:13;s:7:"endLine";i:34;s:7:"methods";a:2:{s:11:"getNodeType";a:6:{s:10:"methodName";s:11:"getNodeType";s:9:"signature";s:21:"getNodeType(): string";s:10:"visibility";s:6:"public";s:9:"startLine";i:16;s:7:"endLine";i:19;s:3:"ccn";i:1;}s:11:"processNode";a:6:{s:10:"methodName";s:11:"processNode";s:9:"signature";s:71:"processNode(PhpParser\Node $node, PHPStan\Analyser\Scope $scope): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:21;s:7:"endLine";i:32;s:3:"ccn";i:3;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:35;s:18:"commentLinesOfCode";i:3;s:21:"nonCommentLinesOfCode";i:32;}s:15:"ignoredLinesFor";a:1:{i:0;i:13;}s:17:"executableLinesIn";a:8:{i:18;i:1;i:23;i:2;i:24;i:3;i:27;i:4;i:28;i:4;i:29;i:4;i:30;i:4;i:31;i:4;}}