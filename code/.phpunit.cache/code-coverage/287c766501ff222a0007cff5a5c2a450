a:6:{s:9:"classesIn";a:1:{s:54:"SebastianBergmann\Comparator\EnumerationComparatorTest";a:6:{s:4:"name";s:25:"EnumerationComparatorTest";s:14:"namespacedName";s:54:"SebastianBergmann\Comparator\EnumerationComparatorTest";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:17;s:7:"endLine";i:115;s:7:"methods";a:8:{s:23:"acceptsSucceedsProvider";a:6:{s:10:"methodName";s:23:"acceptsSucceedsProvider";s:9:"signature";s:32:"acceptsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:25;s:7:"endLine";i:41;s:3:"ccn";i:1;}s:20:"acceptsFailsProvider";a:6:{s:10:"methodName";s:20:"acceptsFailsProvider";s:9:"signature";s:29:"acceptsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:46;s:7:"endLine";i:52;s:3:"ccn";i:1;}s:28:"assertEqualsSucceedsProvider";a:6:{s:10:"methodName";s:28:"assertEqualsSucceedsProvider";s:9:"signature";s:37:"assertEqualsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:57;s:7:"endLine";i:64;s:3:"ccn";i:1;}s:25:"assertEqualsFailsProvider";a:6:{s:10:"methodName";s:25:"assertEqualsFailsProvider";s:9:"signature";s:34:"assertEqualsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:69;s:7:"endLine";i:76;s:3:"ccn";i:1;}s:19:"testAcceptsSucceeds";a:6:{s:10:"methodName";s:19:"testAcceptsSucceeds";s:9:"signature";s:57:"testAcceptsSucceeds(mixed $expected, mixed $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:78;s:7:"endLine";i:84;s:3:"ccn";i:1;}s:16:"testAcceptsFails";a:6:{s:10:"methodName";s:16:"testAcceptsFails";s:9:"signature";s:54:"testAcceptsFails(mixed $expected, mixed $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:86;s:7:"endLine";i:92;s:3:"ccn";i:1;}s:24:"testAssertEqualsSucceeds";a:6:{s:10:"methodName";s:24:"testAssertEqualsSucceeds";s:9:"signature";s:62:"testAssertEqualsSucceeds(mixed $expected, mixed $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:94;s:7:"endLine";i:105;s:3:"ccn";i:2;}s:21:"testAssertEqualsFails";a:6:{s:10:"methodName";s:21:"testAssertEqualsFails";s:9:"signature";s:76:"testAssertEqualsFails(mixed $expected, mixed $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:107;s:7:"endLine";i:114;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:116;s:18:"commentLinesOfCode";i:20;s:21:"nonCommentLinesOfCode";i:96;}s:15:"ignoredLinesFor";a:8:{i:0;i:17;i:1;i:18;i:2;i:19;i:3;i:20;i:4;i:78;i:5;i:86;i:6;i:94;i:7;i:107;}s:17:"executableLinesIn";a:48:{i:17;i:1;i:18;i:2;i:19;i:3;i:27;i:4;i:28;i:4;i:29;i:4;i:30;i:4;i:31;i:4;i:32;i:4;i:33;i:4;i:34;i:4;i:35;i:4;i:36;i:4;i:37;i:4;i:38;i:4;i:39;i:4;i:40;i:4;i:48;i:5;i:49;i:5;i:50;i:5;i:51;i:5;i:59;i:6;i:60;i:6;i:61;i:6;i:62;i:6;i:63;i:6;i:71;i:7;i:72;i:7;i:73;i:7;i:74;i:7;i:75;i:7;i:78;i:8;i:81;i:9;i:82;i:9;i:83;i:9;i:86;i:10;i:89;i:11;i:90;i:11;i:91;i:11;i:94;i:12;i:97;i:13;i:100;i:14;i:101;i:15;i:104;i:16;i:107;i:17;i:110;i:18;i:111;i:19;i:113;i:20;}}