a:6:{s:9:"classesIn";a:1:{s:50:"SebastianBergmann\Comparator\NumericComparatorTest";a:6:{s:4:"name";s:21:"NumericComparatorTest";s:14:"namespacedName";s:50:"SebastianBergmann\Comparator\NumericComparatorTest";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:19;s:7:"endLine";i:166;s:7:"methods";a:8:{s:23:"acceptsSucceedsProvider";a:6:{s:10:"methodName";s:23:"acceptsSucceedsProvider";s:9:"signature";s:32:"acceptsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:28;s:7:"endLine";i:49;s:3:"ccn";i:1;}s:20:"acceptsFailsProvider";a:6:{s:10:"methodName";s:20:"acceptsFailsProvider";s:9:"signature";s:29:"acceptsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:54;s:7:"endLine";i:63;s:3:"ccn";i:1;}s:28:"assertEqualsSucceedsProvider";a:6:{s:10:"methodName";s:28:"assertEqualsSucceedsProvider";s:9:"signature";s:37:"assertEqualsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:68;s:7:"endLine";i:96;s:3:"ccn";i:1;}s:25:"assertEqualsFailsProvider";a:6:{s:10:"methodName";s:25:"assertEqualsFailsProvider";s:9:"signature";s:34:"assertEqualsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:101;s:7:"endLine";i:127;s:3:"ccn";i:1;}s:19:"testAcceptsSucceeds";a:6:{s:10:"methodName";s:19:"testAcceptsSucceeds";s:9:"signature";s:57:"testAcceptsSucceeds(mixed $expected, mixed $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:129;s:7:"endLine";i:135;s:3:"ccn";i:1;}s:16:"testAcceptsFails";a:6:{s:10:"methodName";s:16:"testAcceptsFails";s:9:"signature";s:54:"testAcceptsFails(mixed $expected, mixed $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:137;s:7:"endLine";i:143;s:3:"ccn";i:1;}s:24:"testAssertEqualsSucceeds";a:6:{s:10:"methodName";s:24:"testAssertEqualsSucceeds";s:9:"signature";s:76:"testAssertEqualsSucceeds(mixed $expected, mixed $actual, float $delta): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:145;s:7:"endLine";i:156;s:3:"ccn";i:2;}s:21:"testAssertEqualsFails";a:6:{s:10:"methodName";s:21:"testAssertEqualsFails";s:9:"signature";s:73:"testAssertEqualsFails(mixed $expected, mixed $actual, float $delta): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:158;s:7:"endLine";i:165;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:167;s:18:"commentLinesOfCode";i:20;s:21:"nonCommentLinesOfCode";i:147;}s:15:"ignoredLinesFor";a:9:{i:0;i:19;i:1;i:20;i:2;i:21;i:3;i:22;i:4;i:23;i:5;i:129;i:6;i:137;i:7;i:145;i:8;i:158;}s:17:"executableLinesIn";a:97:{i:19;i:1;i:20;i:2;i:21;i:3;i:22;i:4;i:30;i:5;i:31;i:5;i:32;i:5;i:33;i:5;i:34;i:5;i:35;i:5;i:36;i:5;i:37;i:5;i:38;i:5;i:39;i:5;i:40;i:5;i:41;i:5;i:42;i:5;i:43;i:5;i:44;i:5;i:45;i:5;i:46;i:5;i:47;i:5;i:48;i:5;i:56;i:6;i:57;i:6;i:58;i:6;i:59;i:6;i:60;i:6;i:61;i:6;i:62;i:6;i:70;i:7;i:71;i:7;i:72;i:7;i:73;i:7;i:74;i:7;i:75;i:7;i:76;i:7;i:77;i:7;i:78;i:7;i:79;i:7;i:80;i:7;i:81;i:7;i:82;i:7;i:83;i:7;i:84;i:7;i:85;i:7;i:86;i:7;i:87;i:7;i:88;i:7;i:89;i:7;i:90;i:7;i:91;i:7;i:92;i:7;i:93;i:7;i:94;i:7;i:95;i:7;i:103;i:8;i:104;i:8;i:105;i:8;i:106;i:8;i:107;i:8;i:108;i:8;i:109;i:8;i:110;i:8;i:111;i:8;i:112;i:8;i:113;i:8;i:114;i:8;i:115;i:8;i:116;i:8;i:117;i:8;i:118;i:8;i:119;i:8;i:120;i:8;i:121;i:8;i:122;i:8;i:123;i:8;i:124;i:8;i:125;i:8;i:126;i:8;i:129;i:9;i:132;i:10;i:133;i:10;i:134;i:10;i:137;i:11;i:140;i:12;i:141;i:12;i:142;i:12;i:145;i:13;i:148;i:14;i:151;i:15;i:152;i:16;i:155;i:17;i:158;i:18;i:161;i:19;i:162;i:20;i:164;i:21;}}