a:6:{s:9:"classesIn";a:1:{s:21:"Nette\Utils\Iterables";a:6:{s:4:"name";s:9:"Iterables";s:14:"namespacedName";s:21:"Nette\Utils\Iterables";s:9:"namespace";s:11:"Nette\Utils";s:9:"startLine";i:18;s:7:"endLine";i:238;s:7:"methods";a:11:{s:8:"contains";a:6:{s:10:"methodName";s:8:"contains";s:9:"signature";s:48:"contains(iterable $iterable, mixed $value): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:25;s:7:"endLine";i:33;s:3:"ccn";i:3;}s:11:"containsKey";a:6:{s:10:"methodName";s:11:"containsKey";s:9:"signature";s:49:"containsKey(iterable $iterable, mixed $key): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:39;s:7:"endLine";i:47;s:3:"ccn";i:3;}s:5:"first";a:6:{s:10:"methodName";s:5:"first";s:9:"signature";s:71:"first(iterable $iterable, ?callable $predicate, ?callable $else): mixed";s:10:"visibility";s:6:"public";s:9:"startLine";i:58;s:7:"endLine";i:66;s:3:"ccn";i:5;}s:8:"firstKey";a:6:{s:10:"methodName";s:8:"firstKey";s:9:"signature";s:74:"firstKey(iterable $iterable, ?callable $predicate, ?callable $else): mixed";s:10:"visibility";s:6:"public";s:9:"startLine";i:77;s:7:"endLine";i:85;s:3:"ccn";i:5;}s:4:"some";a:6:{s:10:"methodName";s:4:"some";s:9:"signature";s:51:"some(iterable $iterable, callable $predicate): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:95;s:7:"endLine";i:103;s:3:"ccn";i:3;}s:5:"every";a:6:{s:10:"methodName";s:5:"every";s:9:"signature";s:52:"every(iterable $iterable, callable $predicate): bool";s:10:"visibility";s:6:"public";s:9:"startLine";i:113;s:7:"endLine";i:121;s:3:"ccn";i:3;}s:6:"filter";a:6:{s:10:"methodName";s:6:"filter";s:9:"signature";s:58:"filter(iterable $iterable, callable $predicate): Generator";s:10:"visibility";s:6:"public";s:9:"startLine";i:132;s:7:"endLine";i:139;s:3:"ccn";i:3;}s:3:"map";a:6:{s:10:"methodName";s:3:"map";s:9:"signature";s:57:"map(iterable $iterable, callable $transformer): Generator";s:10:"visibility";s:6:"public";s:9:"startLine";i:151;s:7:"endLine";i:156;s:3:"ccn";i:2;}s:11:"mapWithKeys";a:6:{s:10:"methodName";s:11:"mapWithKeys";s:9:"signature";s:65:"mapWithKeys(iterable $iterable, callable $transformer): Generator";s:10:"visibility";s:6:"public";s:9:"startLine";i:169;s:7:"endLine";i:177;s:3:"ccn";i:3;}s:7:"memoize";a:6:{s:10:"methodName";s:7:"memoize";s:9:"signature";s:37:"memoize(iterable $iterable): iterable";s:10:"visibility";s:6:"public";s:9:"startLine";i:188;s:7:"endLine";i:220;s:3:"ccn";i:5;}s:10:"toIterator";a:6:{s:10:"methodName";s:10:"toIterator";s:9:"signature";s:40:"toIterator(iterable $iterable): Iterator";s:10:"visibility";s:6:"public";s:9:"startLine";i:230;s:7:"endLine";i:237;s:3:"ccn";i:4;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:239;s:18:"commentLinesOfCode";i:85;s:21:"nonCommentLinesOfCode";i:154;}s:15:"ignoredLinesFor";a:1:{i:0;i:18;}s:17:"executableLinesIn";a:55:{i:27;i:2;i:28;i:3;i:29;i:4;i:32;i:5;i:41;i:6;i:42;i:7;i:43;i:8;i:46;i:9;i:60;i:10;i:61;i:11;i:62;i:12;i:65;i:13;i:79;i:14;i:80;i:15;i:81;i:16;i:84;i:17;i:97;i:18;i:98;i:19;i:99;i:20;i:102;i:21;i:115;i:22;i:116;i:23;i:117;i:24;i:120;i:25;i:134;i:26;i:135;i:27;i:136;i:28;i:153;i:29;i:154;i:30;i:171;i:31;i:172;i:32;i:173;i:33;i:174;i:34;i:190;i:35;i:219;i:35;i:195;i:36;i:200;i:38;i:201;i:39;i:203;i:40;i:204;i:41;i:205;i:42;i:206;i:43;i:207;i:44;i:208;i:45;i:209;i:46;i:210;i:47;i:211;i:48;i:213;i:49;i:215;i:50;i:216;i:51;i:232;i:52;i:233;i:53;i:234;i:54;i:235;i:55;i:236;i:52;}}