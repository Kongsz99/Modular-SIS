a:6:{s:9:"classesIn";a:1:{s:52:"SebastianBergmann\Comparator\ExceptionComparatorTest";a:6:{s:4:"name";s:23:"ExceptionComparatorTest";s:14:"namespacedName";s:52:"SebastianBergmann\Comparator\ExceptionComparatorTest";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:20;s:7:"endLine";i:138;s:7:"methods";a:9:{s:23:"acceptsSucceedsProvider";a:6:{s:10:"methodName";s:23:"acceptsSucceedsProvider";s:9:"signature";s:32:"acceptsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:31;s:7:"endLine";i:38;s:3:"ccn";i:1;}s:20:"acceptsFailsProvider";a:6:{s:10:"methodName";s:20:"acceptsFailsProvider";s:9:"signature";s:29:"acceptsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:43;s:7:"endLine";i:50;s:3:"ccn";i:1;}s:28:"assertEqualsSucceedsProvider";a:6:{s:10:"methodName";s:28:"assertEqualsSucceedsProvider";s:9:"signature";s:37:"assertEqualsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:55;s:7:"endLine";i:69;s:3:"ccn";i:1;}s:25:"assertEqualsFailsProvider";a:6:{s:10:"methodName";s:25:"assertEqualsFailsProvider";s:9:"signature";s:34:"assertEqualsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:74;s:7:"endLine";i:93;s:3:"ccn";i:1;}s:5:"setUp";a:6:{s:10:"methodName";s:5:"setUp";s:9:"signature";s:13:"setUp(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:95;s:7:"endLine";i:99;s:3:"ccn";i:1;}s:19:"testAcceptsSucceeds";a:6:{s:10:"methodName";s:19:"testAcceptsSucceeds";s:9:"signature";s:65:"testAcceptsSucceeds(Throwable $expected, Throwable $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:101;s:7:"endLine";i:107;s:3:"ccn";i:1;}s:16:"testAcceptsFails";a:6:{s:10:"methodName";s:16:"testAcceptsFails";s:9:"signature";s:64:"testAcceptsFails(?Throwable $expected, ?Throwable $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:109;s:7:"endLine";i:115;s:3:"ccn";i:1;}s:24:"testAssertEqualsSucceeds";a:6:{s:10:"methodName";s:24:"testAssertEqualsSucceeds";s:9:"signature";s:70:"testAssertEqualsSucceeds(Throwable $expected, Throwable $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:117;s:7:"endLine";i:128;s:3:"ccn";i:2;}s:21:"testAssertEqualsFails";a:6:{s:10:"methodName";s:21:"testAssertEqualsFails";s:9:"signature";s:84:"testAssertEqualsFails(Throwable $expected, Throwable $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:130;s:7:"endLine";i:137;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:139;s:18:"commentLinesOfCode";i:20;s:21:"nonCommentLinesOfCode";i:119;}s:15:"ignoredLinesFor";a:9:{i:0;i:20;i:1;i:21;i:2;i:22;i:3;i:23;i:4;i:24;i:5;i:101;i:6;i:109;i:7;i:117;i:8;i:130;}s:17:"executableLinesIn";a:57:{i:20;i:1;i:21;i:2;i:22;i:3;i:23;i:4;i:33;i:6;i:34;i:6;i:35;i:6;i:36;i:6;i:37;i:6;i:45;i:7;i:46;i:7;i:47;i:7;i:48;i:7;i:49;i:7;i:57;i:8;i:58;i:9;i:60;i:10;i:61;i:11;i:63;i:12;i:64;i:12;i:65;i:12;i:66;i:12;i:67;i:12;i:68;i:12;i:76;i:13;i:77;i:14;i:79;i:15;i:80;i:16;i:81;i:17;i:83;i:18;i:84;i:19;i:86;i:20;i:87;i:20;i:88;i:20;i:89;i:20;i:90;i:20;i:91;i:20;i:92;i:20;i:97;i:21;i:98;i:22;i:101;i:23;i:104;i:24;i:105;i:24;i:106;i:24;i:109;i:25;i:112;i:26;i:113;i:26;i:114;i:26;i:117;i:27;i:120;i:28;i:123;i:29;i:124;i:30;i:127;i:31;i:130;i:32;i:133;i:33;i:134;i:34;i:136;i:35;}}