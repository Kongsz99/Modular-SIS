a:6:{s:9:"classesIn";a:1:{s:51:"PHPUnit\Runner\Filter\ExcludeNameFilterIteratorTest";a:6:{s:4:"name";s:29:"ExcludeNameFilterIteratorTest";s:14:"namespacedName";s:51:"PHPUnit\Runner\Filter\ExcludeNameFilterIteratorTest";s:9:"namespace";s:21:"PHPUnit\Runner\Filter";s:9:"startLine";i:19;s:7:"endLine";i:53;s:7:"methods";a:3:{s:22:"testCaseSensitiveMatch";a:6:{s:10:"methodName";s:22:"testCaseSensitiveMatch";s:9:"signature";s:30:"testCaseSensitiveMatch(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:26;s:7:"endLine";i:29;s:3:"ccn";i:1;}s:24:"testCaseInsensitiveMatch";a:6:{s:10:"methodName";s:24:"testCaseInsensitiveMatch";s:9:"signature";s:32:"testCaseInsensitiveMatch(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:34;s:7:"endLine";i:37;s:3:"ccn";i:1;}s:12:"createFilter";a:6:{s:10:"methodName";s:12:"createFilter";s:9:"signature";s:77:"createFilter(string $filter): PHPUnit\Runner\Filter\ExcludeNameFilterIterator";s:10:"visibility";s:7:"private";s:9:"startLine";i:42;s:7:"endLine";i:52;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:54;s:18:"commentLinesOfCode";i:17;s:21:"nonCommentLinesOfCode";i:37;}s:15:"ignoredLinesFor";a:3:{i:0;i:19;i:1;i:20;i:2;i:21;}s:17:"executableLinesIn";a:9:{i:19;i:1;i:20;i:2;i:28;i:3;i:36;i:4;i:44;i:5;i:45;i:6;i:47;i:7;i:49;i:8;i:51;i:9;}}