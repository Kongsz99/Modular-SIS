a:6:{s:9:"classesIn";a:1:{s:43:"PHPUnit\Framework\Constraint\LogicalNotTest";a:6:{s:4:"name";s:14:"LogicalNotTest";s:14:"namespacedName";s:43:"PHPUnit\Framework\Constraint\LogicalNotTest";s:9:"namespace";s:28:"PHPUnit\Framework\Constraint";s:9:"startLine";i:21;s:7:"endLine";i:145;s:7:"methods";a:7:{s:8:"provider";a:6:{s:10:"methodName";s:8:"provider";s:9:"signature";s:17:"provider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:28;s:7:"endLine";i:57;s:3:"ccn";i:1;}s:14:"negateProvider";a:6:{s:10:"methodName";s:14:"negateProvider";s:9:"signature";s:23:"negateProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:59;s:7:"endLine";i:87;s:3:"ccn";i:1;}s:18:"testCanBeEvaluated";a:6:{s:10:"methodName";s:18:"testCanBeEvaluated";s:9:"signature";s:134:"testCanBeEvaluated(bool $result, string $failureDescription, PHPUnit\Framework\Constraint\LogicalNot $constraint, mixed $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:89;s:7:"endLine";i:102;s:3:"ccn";i:2;}s:22:"testCanNegateStatement";a:6:{s:10:"methodName";s:22:"testCanNegateStatement";s:9:"signature";s:61:"testCanNegateStatement(string $input, string $expected): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:104;s:7:"endLine";i:108;s:3:"ccn";i:1;}s:28:"testCanBeRepresentedAsString";a:6:{s:10:"methodName";s:28:"testCanBeRepresentedAsString";s:9:"signature";s:36:"testCanBeRepresentedAsString(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:110;s:7:"endLine";i:120;s:3:"ccn";i:1;}s:15:"testIsCountable";a:6:{s:10:"methodName";s:15:"testIsCountable";s:9:"signature";s:23:"testIsCountable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:122;s:7:"endLine";i:132;s:3:"ccn";i:1;}s:46:"testForNotEqualsWithStringThatContainsContains";a:6:{s:10:"methodName";s:46:"testForNotEqualsWithStringThatContainsContains";s:9:"signature";s:54:"testForNotEqualsWithStringThatContainsContains(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:134;s:7:"endLine";i:144;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:146;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:138;}s:15:"ignoredLinesFor";a:10:{i:0;i:21;i:1;i:22;i:2;i:23;i:3;i:24;i:4;i:25;i:5;i:26;i:6;i:89;i:7;i:104;i:8;i:134;i:9;i:135;}s:17:"executableLinesIn";a:85:{i:21;i:1;i:22;i:2;i:23;i:3;i:24;i:4;i:25;i:5;i:30;i:6;i:31;i:6;i:32;i:6;i:33;i:6;i:34;i:6;i:35;i:6;i:36;i:6;i:38;i:6;i:39;i:6;i:40;i:6;i:41;i:6;i:42;i:6;i:43;i:6;i:45;i:6;i:46;i:6;i:47;i:6;i:48;i:6;i:49;i:6;i:50;i:6;i:51;i:6;i:52;i:6;i:53;i:6;i:54;i:6;i:55;i:6;i:56;i:6;i:61;i:7;i:62;i:7;i:63;i:7;i:64;i:7;i:65;i:7;i:66;i:7;i:67;i:7;i:68;i:7;i:69;i:7;i:70;i:7;i:71;i:7;i:72;i:7;i:73;i:7;i:74;i:7;i:75;i:7;i:76;i:7;i:77;i:7;i:78;i:7;i:79;i:7;i:80;i:7;i:81;i:7;i:82;i:7;i:83;i:7;i:84;i:7;i:85;i:7;i:86;i:7;i:89;i:8;i:92;i:9;i:94;i:10;i:95;i:11;i:98;i:12;i:99;i:13;i:101;i:14;i:104;i:15;i:107;i:16;i:112;i:17;i:113;i:17;i:114;i:17;i:115;i:17;i:116;i:17;i:117;i:17;i:119;i:18;i:124;i:19;i:125;i:19;i:126;i:19;i:127;i:19;i:128;i:19;i:129;i:19;i:131;i:20;i:134;i:21;i:135;i:22;i:138;i:23;i:140;i:24;i:141;i:25;i:143;i:26;}}